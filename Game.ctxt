#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\r\n\ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\r\n\ to\ make\ it\ more\ interesting\!\r\n\ <p>\r\n\ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ method.\r\n\ <p>\r\n\ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\r\n\ @author\ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @version\ 2016.02.29\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=boolean\ quit(Command)
comment10.text=\ x\r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment11.params=stack\ currentRoom
comment11.target=void\ pushStack(java.util.Stack,\ Room)
comment11.text=\r\n\ @param\ Room\ currentRoom\r\n\ \r\n\ @return\ push\ latest\ room\ onto\ the\ stack\ \r\n
comment12.params=stack\ currentRoom
comment12.target=int\ popStack(java.util.Stack,\ Room)
comment13.params=i
comment13.target=void\ increment(int)
comment13.text=\r\n\ \ @param\ item\ \=\ int\ i\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ do\ a\ ++\ on\ the\ item\ from\ the\ room\ where\ you\ were\ in.\r\n\ \r\n
comment14.params=command
comment14.target=void\ craft(Command)
comment14.text=\r\n\ @param\ secondWord\r\n\ if\ the\ second\ word\ is\ an\ item\ craft\ it\r\n\ else\ you\ can't\ craft\ this\r\n\ \r\n
comment15.params=command
comment15.target=void\ use(Command)
comment15.text=\r\n\ @param\ second\ word\r\n\ If\ the\ second\ word\ is\ an\ item\ that\ is\ useable,\ use\ the\ item\r\n\ else\ ask\ what\ he\ wants\ to\ use\r\n
comment16.params=
comment16.target=void\ fight()
comment16.text=\r\n\ if\ the\ room\ ID\ has\ a\ boss\ you\ can\ fight\ it.\r\n\ else\ There\ is\ nothing\ to\ fight\r\n\ \r\n
comment17.params=
comment17.target=boolean\ countMove()
comment17.text=\r\n\ count\ move\ at\ every\ goroom\ command\r\n\ print\ current\ moves\ and\ moves\ left\r\n\ if\ maximum\ is\ reached\ print\ game\ over\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment6.params=
comment6.target=void\ ItemToGet()
comment6.text=\r\n\r\n
comment7.params=
comment7.target=void\ printHelp()
comment7.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\r\n\ command\ words.\r\n
comment8.params=command
comment8.target=void\ goRoom(Command)
comment8.text=\ \r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment9.params=roomID
comment9.target=void\ goRoom(int)
numComments=18
